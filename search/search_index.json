{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FreeTAKServer FTS is a Python3 implementation of the TAK Server for devices like CivTAK , WinTAK and ITAK, it is cross-platform. Community This project is currently in Early Production Stage . Check out our roadmap @FreeTakServer#25 to see what is planned If you have any issues don't hesitate to bring it up , as FreeTAKServer is in continuous development. Donate Back the FTS team is working daily on the development of a open and free solution. We plan to do more that simply replicate the functionalities of the legacy TAK server, our road map includes integration with open source systems like LORA's Meshtastic, porting it to Android, having an open API and much more. We are doing it for free because we believe that donating personal time to a cause it's an endeavour that is worthy per-se, however, part-time, we are also spending our own money to: Maintain a Public server and a test server Investing in different technologies for R&D if you feel that FTS is useful to you and you can donate in those challenging times please consider to send you contribution here: DONATE You can also support the project by buying one of our T-Shirts NOTE: Not a big fan of Paypal, but that is the easier way I found for an initial attempt. We may go to some more ethical system in the future. Public instance We support a public instance of FTS. - download the configuration here - use the Import manager in ATAK to import the configuration Tell us what you think! To discuss with the developer team you may use: The subreddit : https://www.reddit.com/r/ATAK/ The public ATAK Discord Server: https://discordapp.com/invite/XEPyhHA","title":"FreeTAKServer"},{"location":"#freetakserver","text":"FTS is a Python3 implementation of the TAK Server for devices like CivTAK , WinTAK and ITAK, it is cross-platform.","title":"FreeTAKServer"},{"location":"#community","text":"This project is currently in Early Production Stage . Check out our roadmap @FreeTakServer#25 to see what is planned If you have any issues don't hesitate to bring it up , as FreeTAKServer is in continuous development.","title":"Community"},{"location":"#donate-back","text":"the FTS team is working daily on the development of a open and free solution. We plan to do more that simply replicate the functionalities of the legacy TAK server, our road map includes integration with open source systems like LORA's Meshtastic, porting it to Android, having an open API and much more. We are doing it for free because we believe that donating personal time to a cause it's an endeavour that is worthy per-se, however, part-time, we are also spending our own money to: Maintain a Public server and a test server Investing in different technologies for R&D if you feel that FTS is useful to you and you can donate in those challenging times please consider to send you contribution here: DONATE You can also support the project by buying one of our T-Shirts NOTE: Not a big fan of Paypal, but that is the easier way I found for an initial attempt. We may go to some more ethical system in the future.","title":"Donate Back"},{"location":"#public-instance","text":"We support a public instance of FTS. - download the configuration here - use the Import manager in ATAK to import the configuration","title":"Public instance"},{"location":"#tell-us-what-you-think","text":"To discuss with the developer team you may use: The subreddit : https://www.reddit.com/r/ATAK/ The public ATAK Discord Server: https://discordapp.com/invite/XEPyhHA","title":"Tell us what you think!"},{"location":"CLI/","text":"CLI Access To access the CLI open a new terminal and run the command: sudo python3 -m FreeTAKServer.views.CLI Commands Command Purpose help List all commands start_all Begin all services type start_CoT_service Begin CoT service type start_data_package_service Begin data package service type stop_all Terminate all services type stop_CoT_service Terminate CoT service type stop_data_package_service Begin data package service type change_connection_info Change the address and port of the server you're connecting to show_users Show connected user information type kill Kill the full server type show_DP Show all DataPackages on the server remove_DP Remove a DataPackages on the server add_api_user add a user and a token for API consumption show_api_users show a list of users and their tokens remove_api_user show a list of users and their tokens","title":"CLI"},{"location":"CLI/#cli","text":"","title":"CLI"},{"location":"CLI/#access","text":"To access the CLI open a new terminal and run the command: sudo python3 -m FreeTAKServer.views.CLI","title":"Access"},{"location":"CLI/#commands","text":"Command Purpose help List all commands start_all Begin all services type start_CoT_service Begin CoT service type start_data_package_service Begin data package service type stop_all Terminate all services type stop_CoT_service Terminate CoT service type stop_data_package_service Begin data package service type change_connection_info Change the address and port of the server you're connecting to show_users Show connected user information type kill Kill the full server type show_DP Show all DataPackages on the server remove_DP Remove a DataPackages on the server add_api_user add a user and a token for API consumption show_api_users show a list of users and their tokens remove_api_user show a list of users and their tokens","title":"Commands"},{"location":"Installation/Video%20Guides/","text":"RPiFTS Series GHOST_DA-B6 has created a set of videos on youtube detailing how to install and set up FTS on raspberry pi SBC's. You can view his RPiFTS video series on his channel .","title":"Video Guides"},{"location":"Installation/Video%20Guides/#rpifts-series","text":"GHOST_DA-B6 has created a set of videos on youtube detailing how to install and set up FTS on raspberry pi SBC's. You can view his RPiFTS video series on his channel .","title":"RPiFTS Series"},{"location":"Installation/Docker/","text":"Install The official Docker image for FreeTAKServer. Usage When using this docker container we suggested that you use the --restart unless-stopped flag as shown in the examples. This will enure that the service automatically starts with the host and will restart if it encounters an error and crashes. The port mappings in the examples are required to make the service accessable to hosts. All environment variables are optional. All data is stored in a single directory for ease of persistent data between container versions. docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2 Ports The docker image runs the ports on the same defaults as FreeTAKServer. You can use the -e flag to map these ports to different ports or to run multiple FreeTAKServer's concurrently on the same host. Environment Variabls FTS_CONNECTION_MESSAGE: Accepts a string to send to users when they connect. Set to \"None\" to disable. FTS_SAVE_COT_TO_DB: Accepts \"True\" or \"False\" setting to save CoTs to the DB. FTS_ARGS: Arguments to pass on the command line, \"-AutoStart True\" is passed automatically. Storage All data in this container is stored in /data . This directory will need to be stored to a volume if you wish to persist data between updates. Additional Architectures Currently the container is being cross compiled for linux/amd64 , linux/arm64 and linux/arm/v7 . If additional processor architectures are needed please open an issue and request a new one. Docker Hub Page https://hub.docker.com/r/freetakteam/freetakserver","title":"Install"},{"location":"Installation/Docker/#install","text":"The official Docker image for FreeTAKServer.","title":"Install"},{"location":"Installation/Docker/#usage","text":"When using this docker container we suggested that you use the --restart unless-stopped flag as shown in the examples. This will enure that the service automatically starts with the host and will restart if it encounters an error and crashes. The port mappings in the examples are required to make the service accessable to hosts. All environment variables are optional. All data is stored in a single directory for ease of persistent data between container versions. docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2","title":"Usage"},{"location":"Installation/Docker/#ports","text":"The docker image runs the ports on the same defaults as FreeTAKServer. You can use the -e flag to map these ports to different ports or to run multiple FreeTAKServer's concurrently on the same host.","title":"Ports"},{"location":"Installation/Docker/#environment-variabls","text":"FTS_CONNECTION_MESSAGE: Accepts a string to send to users when they connect. Set to \"None\" to disable. FTS_SAVE_COT_TO_DB: Accepts \"True\" or \"False\" setting to save CoTs to the DB. FTS_ARGS: Arguments to pass on the command line, \"-AutoStart True\" is passed automatically.","title":"Environment Variabls"},{"location":"Installation/Docker/#storage","text":"All data in this container is stored in /data . This directory will need to be stored to a volume if you wish to persist data between updates.","title":"Storage"},{"location":"Installation/Docker/#additional-architectures","text":"Currently the container is being cross compiled for linux/amd64 , linux/arm64 and linux/arm/v7 . If additional processor architectures are needed please open an issue and request a new one.","title":"Additional Architectures"},{"location":"Installation/Docker/#docker-hub-page","text":"https://hub.docker.com/r/freetakteam/freetakserver","title":"Docker Hub Page"},{"location":"Installation/Docker/CLI/","text":"CLI Access Accessing the CLI With the docker container isolating the running instance you also need to use docker to access the cli. docker exec -it fts python3 -m FreeTAKServer.views.CLI This will open a CLI instance attached to the process running in the container. With the CLI open in your terminal you can view supported commands by running help","title":"CLI"},{"location":"Installation/Docker/CLI/#cli-access","text":"","title":"CLI Access"},{"location":"Installation/Docker/CLI/#accessing-the-cli","text":"With the docker container isolating the running instance you also need to use docker to access the cli. docker exec -it fts python3 -m FreeTAKServer.views.CLI This will open a CLI instance attached to the process running in the container. With the CLI open in your terminal you can view supported commands by running help","title":"Accessing the CLI"},{"location":"Installation/Docker/Debian/","text":"Debian This is assuming a fresh installation of Debian 10. Install Docker sudo apt-get install curl curl https://releases.rancher.com/install-docker/19.03.sh | sh Or follow the docker installation guide. https://docs.docker.com/engine/install/debian/ Run the Container docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2","title":"Debian"},{"location":"Installation/Docker/Debian/#debian","text":"This is assuming a fresh installation of Debian 10.","title":"Debian"},{"location":"Installation/Docker/Debian/#install-docker","text":"sudo apt-get install curl curl https://releases.rancher.com/install-docker/19.03.sh | sh Or follow the docker installation guide. https://docs.docker.com/engine/install/debian/","title":"Install Docker"},{"location":"Installation/Docker/Debian/#run-the-container","text":"docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2","title":"Run the Container"},{"location":"Installation/Docker/Quick%20Start%20Guide/","text":"This will run FreeTAKServer without persistent data storage with all default settings. docker run -d -p 8080:8080/tcp -p 8087:8087/tcp --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2 Persistent Data All persistent data is stored to /data and may be volume mounted. The host volume needs to be owned by user and group 1000. docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2 It is also possible to use an absolute path with a blind mount on the host instead of a proper volume. For more information about volumes https://docs.docker.com/storage/volumes/","title":"Quick Start Guide"},{"location":"Installation/Docker/Quick%20Start%20Guide/#persistent-data","text":"All persistent data is stored to /data and may be volume mounted. The host volume needs to be owned by user and group 1000. docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2 It is also possible to use an absolute path with a blind mount on the host instead of a proper volume. For more information about volumes https://docs.docker.com/storage/volumes/","title":"Persistent Data"},{"location":"Installation/Docker/Raspberry%20Pi/","text":"Raspberry Pi 4/Raspberry Pi 3 It is recommended to use a Raspberry Pi 4 with 4GB or 8GB of ram. This guide assumes that you have a clean install of Raspberry Pi OS or Raspbian. You may also use the 64 bit Ubuntu 20.04 server prepared for the Raspberry Pi 4. Install Docker sudo apt-get update && sudo apt-get upgrade sudo apt-get install curl curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh Run the Container docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2 Older Pi's Raspberry Pi's prior to the Pi3 have not been tested, and would not be recommended for use.","title":"Raspberry Pi 4/Raspberry Pi 3"},{"location":"Installation/Docker/Raspberry%20Pi/#raspberry-pi-4raspberry-pi-3","text":"It is recommended to use a Raspberry Pi 4 with 4GB or 8GB of ram. This guide assumes that you have a clean install of Raspberry Pi OS or Raspbian. You may also use the 64 bit Ubuntu 20.04 server prepared for the Raspberry Pi 4.","title":"Raspberry Pi 4/Raspberry Pi 3"},{"location":"Installation/Docker/Raspberry%20Pi/#install-docker","text":"sudo apt-get update && sudo apt-get upgrade sudo apt-get install curl curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh","title":"Install Docker"},{"location":"Installation/Docker/Raspberry%20Pi/#run-the-container","text":"docker volume create fts_data docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:1.1.2","title":"Run the Container"},{"location":"Installation/Docker/Raspberry%20Pi/#older-pis","text":"Raspberry Pi's prior to the Pi3 have not been tested, and would not be recommended for use.","title":"Older Pi's"},{"location":"Installation/Docker/Multiple%20Servers/multiple/","text":"Multiple Servers on Single Host It is possible to run FreeTakServer multiple times on a single host by changing the port numbers. If you follow an installation guide for your target platform and have a container running named fts using the default ports, this will explain how to run a second server on non default ports. Limitations Currently due to a bug in the ATAK client you will need to share packages across all FTS servers on the same host. The additional servers will use the first server, using the default port of 8080 for data packages. Running an aditional container docker volume create fts_data2 docker run -d -p 8088:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server 2\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data2:/host/system/folder --name fts2 --restart unless-stopped freetakteam/freetakserver:1.1.2 We can use this command as a template to run as many FTS server instances as we would like on a single host by changing the name of the container and the ports FTS is running on. So long as we avoid collisions on ports and names, if we have the resources we can run multiple servers with ease.","title":"Multiple Servers on Single Host"},{"location":"Installation/Docker/Multiple%20Servers/multiple/#multiple-servers-on-single-host","text":"It is possible to run FreeTakServer multiple times on a single host by changing the port numbers. If you follow an installation guide for your target platform and have a container running named fts using the default ports, this will explain how to run a second server on non default ports.","title":"Multiple Servers on Single Host"},{"location":"Installation/Docker/Multiple%20Servers/multiple/#limitations","text":"Currently due to a bug in the ATAK client you will need to share packages across all FTS servers on the same host. The additional servers will use the first server, using the default port of 8080 for data packages.","title":"Limitations"},{"location":"Installation/Docker/Multiple%20Servers/multiple/#running-an-aditional-container","text":"docker volume create fts_data2 docker run -d -p 8088:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server 2\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data2:/host/system/folder --name fts2 --restart unless-stopped freetakteam/freetakserver:1.1.2 We can use this command as a template to run as many FTS server instances as we would like on a single host by changing the name of the container and the ports FTS is running on. So long as we avoid collisions on ports and names, if we have the resources we can run multiple servers with ease.","title":"Running an aditional container"},{"location":"Installation/Docker/Upgrade/Upgrade/","text":"Upgrading Existing Container To upgrade the container to a new version you simply stop the container running the version you wish to upgrade from, and start a container running the version you want to upgrade to. To have data transfered between versions you need to have used a volume during the initial set up. docker stop fts docker rm fts docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:{New FTS version}","title":"Upgrading Existing Container"},{"location":"Installation/Docker/Upgrade/Upgrade/#upgrading-existing-container","text":"To upgrade the container to a new version you simply stop the container running the version you wish to upgrade from, and start a container running the version you want to upgrade to. To have data transfered between versions you need to have used a volume during the initial set up. docker stop fts docker rm fts docker run -d -p 8080:8080/tcp -p 8087:8087/tcp -e FTS_CONNECTION_MESSAGE=\"Server Connection Message\" -e FTS_SAVE_COT_TO_DB=\"True\" -v fts_data:/host/system/folder --name fts --restart unless-stopped freetakteam/freetakserver:{New FTS version}","title":"Upgrading Existing Container"},{"location":"Installation/PyPi/Linux/Install/","text":"This guide will walk you through installing FreeTAKServer on a linux host Linux Distribution It is suggested to use Ubuntu 20.04 or Debian 10 or Raspberry PI OS. Install Python 3 sudo apt update && sudo apt install python3 && sudo apt install python3-pip Install Python Libraries sudo apt install python3-dev python3-setuptools build-essential python3-gevent python3-lxml libcairo2-dev Install FreeTAKServer sudo python3 -m pip install FreeTAKServer pip check FreeTakServer Configure FreeTAKServer Depending on the linux distro your config file for FTS will be in a python version dependant location. If you are running python 3.7 /usr/local/lib/python3.7/dist-packages/FreeTAKServer/controllers/configuration/MainConfig.py If you are running python 3.8 /usr/local/lib/python3.8/dist-packages/FreeTAKServer/controllers/configuration/MainConfig.py You can edit the file via nano with the following command sudo nano /usr/local/lib/python3.7/dist-packages/FreeTAKServer/controllers/configuration/MainConfig.py To exit nano ctrl+x and then enter y to save and hit enter. DBFilePath No you need to change the DBFilePath value to something valid, if you are running as root, '/root' is a good choice. Original Value # this should be set before startup DBFilePath = str(r'/home/root/FTSDataBase.db') As roots Home Folder # this should be set before startup DBFilePath = str(r'/root/FTSDataBase.db') Test FTS Let's make sure your FTS server can start and run without errors. sudo python3 -m FreeTAKServer.controllers.services.FTS -DataPackageIP 0.0.0.0 -AutoStart True If you see FTS start without error you may hit ctrl+c twice and move onto running FTS.","title":"Install"},{"location":"Installation/PyPi/Linux/Install/#linux-distribution","text":"It is suggested to use Ubuntu 20.04 or Debian 10 or Raspberry PI OS.","title":"Linux Distribution"},{"location":"Installation/PyPi/Linux/Install/#install-python-3","text":"sudo apt update && sudo apt install python3 && sudo apt install python3-pip","title":"Install Python 3"},{"location":"Installation/PyPi/Linux/Install/#install-python-libraries","text":"sudo apt install python3-dev python3-setuptools build-essential python3-gevent python3-lxml libcairo2-dev","title":"Install Python Libraries"},{"location":"Installation/PyPi/Linux/Install/#install-freetakserver","text":"sudo python3 -m pip install FreeTAKServer pip check FreeTakServer","title":"Install FreeTAKServer"},{"location":"Installation/PyPi/Linux/Install/#configure-freetakserver","text":"Depending on the linux distro your config file for FTS will be in a python version dependant location. If you are running python 3.7 /usr/local/lib/python3.7/dist-packages/FreeTAKServer/controllers/configuration/MainConfig.py If you are running python 3.8 /usr/local/lib/python3.8/dist-packages/FreeTAKServer/controllers/configuration/MainConfig.py You can edit the file via nano with the following command sudo nano /usr/local/lib/python3.7/dist-packages/FreeTAKServer/controllers/configuration/MainConfig.py To exit nano ctrl+x and then enter y to save and hit enter.","title":"Configure FreeTAKServer"},{"location":"Installation/PyPi/Linux/Install/#dbfilepath","text":"No you need to change the DBFilePath value to something valid, if you are running as root, '/root' is a good choice. Original Value # this should be set before startup DBFilePath = str(r'/home/root/FTSDataBase.db') As roots Home Folder # this should be set before startup DBFilePath = str(r'/root/FTSDataBase.db')","title":"DBFilePath"},{"location":"Installation/PyPi/Linux/Install/#test-fts","text":"Let's make sure your FTS server can start and run without errors. sudo python3 -m FreeTAKServer.controllers.services.FTS -DataPackageIP 0.0.0.0 -AutoStart True If you see FTS start without error you may hit ctrl+c twice and move onto running FTS.","title":"Test FTS"},{"location":"Installation/PyPi/Linux/Running/","text":"If you have not installed FreeTAKServer please follow the installation guide first. Parameters Flag Default Description -AutoStart Weather the full server start or just the RestAPI, must be True or False -CoTIP Your Server IP -CoTPort 8087 The port you want clients to connect to -DataPackageIP 0.0.0.0 The IP where data packages are served from -DataPackagePort 8080 The port you want Data Packages to be sent and received on Run FTS in the Console sudo python3 -m FreeTAKServer.controllers.services.FTS -DataPackageIP 0.0.0.0 -AutoStart True If you have FTS running in the terminal how you would like it's time to move on to running FTS as a service.","title":"Running"},{"location":"Installation/PyPi/Linux/Running/#parameters","text":"Flag Default Description -AutoStart Weather the full server start or just the RestAPI, must be True or False -CoTIP Your Server IP -CoTPort 8087 The port you want clients to connect to -DataPackageIP 0.0.0.0 The IP where data packages are served from -DataPackagePort 8080 The port you want Data Packages to be sent and received on","title":"Parameters"},{"location":"Installation/PyPi/Linux/Running/#run-fts-in-the-console","text":"sudo python3 -m FreeTAKServer.controllers.services.FTS -DataPackageIP 0.0.0.0 -AutoStart True If you have FTS running in the terminal how you would like it's time to move on to running FTS as a service.","title":"Run FTS in the Console"},{"location":"Installation/PyPi/Linux/Service/","text":"Running FreeTAKServer as a service on your linux server can be achieved multiple ways. Cron Cron or Crontab is a basic scheduler that ships with most linux distributions. We can use this to get a very basic service running with minimal effort. Edit Crontab sudo crontab -e Add this line to the bottom of the file @reboot nohup sudo python3 -m FreeTAKServer.controllers.services.FTS & You will need to add any start parameters to the crontab file such as -DataPackageIP . Systemd WIP","title":"Service"},{"location":"Installation/PyPi/Linux/Service/#cron","text":"Cron or Crontab is a basic scheduler that ships with most linux distributions. We can use this to get a very basic service running with minimal effort.","title":"Cron"},{"location":"Installation/PyPi/Linux/Service/#edit-crontab","text":"sudo crontab -e Add this line to the bottom of the file @reboot nohup sudo python3 -m FreeTAKServer.controllers.services.FTS & You will need to add any start parameters to the crontab file such as -DataPackageIP .","title":"Edit Crontab"},{"location":"Installation/PyPi/Linux/Service/#systemd","text":"WIP","title":"Systemd"},{"location":"Usage/Connecting%20ATAK/","text":"","title":"Connecting ATAK"},{"location":"Usage/Connecting%20ATAK/#_1","text":"","title":""},{"location":"Usage/Connecting%20WinTAK/","text":"WinTAK has a known issue with the TAK Chat Plugin. You Must disable the plugin or you will have frequent disconnects from FTS. Disable TAK Chat Navigate to the plugin management menu. Then select unload on TAK Chat Connect to FTS You can now connect to FTS by navigating to Settings -> Network Preferences -> Mange Server Connections From there you can add your FTS server IP or host name and port.","title":"Connecting WinTAK"},{"location":"Usage/Connecting%20WinTAK/#disable-tak-chat","text":"Navigate to the plugin management menu. Then select unload on TAK Chat","title":"Disable TAK Chat"},{"location":"Usage/Connecting%20WinTAK/#connect-to-fts","text":"You can now connect to FTS by navigating to Settings -> Network Preferences -> Mange Server Connections From there you can add your FTS server IP or host name and port.","title":"Connect to FTS"}]}